
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
  worker_connections  1024;
}


http {
  include       mime.types;
  default_type  application/octet-stream;

  #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  #                  '$status $body_bytes_sent "$http_referer" '
  #                  '"$http_user_agent" "$http_x_forwarded_for"';

  #access_log  logs/access.log  main;

  sendfile        on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout  65;

  #gzip  on;

  server {
    listen   8081 default_server;
    # listen [::]:80 default_server deferred;
    return   444;
  }

  # default page
  server {
    listen       8083;
    server_name  localhost_8083;

    #charset koi8-r;
    #access_log  logs/host.access.log  main;

    root	html;
    index	index.html index.htm;
    location / {
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }
  }

  # EMP.Sts
  server {
    listen		    22000;
    ssl                  on;
    ssl_certificate      /Users/david.d.an/Downloads/cert/selfcert/localhost.crt;
    ssl_certificate_key  /Users/david.d.an/Downloads/cert/selfcert/localhost.key;
    ssl_ciphers          HIGH:!aNULL:!MD5;
    server_name	  localhost_22000;

    location / {
      # add_header Access-Control-Allow-Origin *;

      # set $cors '';
      # if ($http_origin ~ '^https?://(localhost|www\.yourdomain\.com|www\.yourotherdomain\.com)') {
      #   set $cors 'true';
      # }

      # if ($cors = 'true') {
      #   add_header 'Access-Control-Allow-Origin' "$http_origin" always;
      #   add_header 'Access-Control-Allow-Credentials' 'true' always;
      #   add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      #   add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
      #   # required to be able to read Authorization header in frontend
      #   #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
      # }

      # if ($request_method = 'OPTIONS') {
      #   # Tell client that this pre-flight info is valid for 20 days
      #   add_header 'Access-Control-Max-Age' 1728000;
      #   add_header 'Content-Type' 'text/plain charset=UTF-8';
      #   add_header 'Content-Length' 0;
      #   return 204;
      # }

      proxy_pass https://localhost:22001;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection keep-alive;
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_set_header X-Real-IP $remote_addr;
    }
  }

  include servers/*;
}
