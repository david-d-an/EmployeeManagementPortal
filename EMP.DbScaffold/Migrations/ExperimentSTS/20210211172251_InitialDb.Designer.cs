// // <auto-generated />
// using System;
// using EMP.DbScaffold.Models.STS;
// using Microsoft.EntityFrameworkCore;
// using Microsoft.EntityFrameworkCore.Infrastructure;
// using Microsoft.EntityFrameworkCore.Migrations;
// using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

// namespace EMP.DbScaffold.Migrations.STS
// {
//     [DbContext(typeof(stsContext))]
//     [Migration("20210211172251_InitialDb")]
//     partial class InitialDb
//     {
//         protected override void BuildTargetModel(ModelBuilder modelBuilder)
//         {
// #pragma warning disable 612, 618
//             modelBuilder
//                 .HasAnnotation("ProductVersion", "3.1.10")
//                 .HasAnnotation("Relational:MaxIdentifierLength", 64);

//             modelBuilder.Entity("EMP.DbScaffold.Models.STS.User", b =>
//                 {
//                     b.Property<string>("UserName")
//                         .HasColumnName("user_name")
//                         .HasColumnType("varchar(40)")
//                         .HasMaxLength(40);

//                     b.Property<string>("Password")
//                         .HasColumnName("password")
//                         .HasColumnType("varchar(50)")
//                         .HasMaxLength(50);

//                     b.Property<string>("HashedPassword")
//                         .HasColumnName("hashed_password")
//                         .HasColumnType("varchar(512)")
//                         .HasMaxLength(512);

//                     b.Property<bool?>("Locked")
//                         .HasColumnName("locked")
//                         .HasColumnType("bool");

//                     b.Property<int>("UserId")
//                         .HasColumnName("user_id")
//                         .HasColumnType("int(11)");

//                     b.HasKey("UserName", "Password")
//                         .HasName("PRIMARY");

//                     b.HasIndex("UserName", "Password")
//                         .IsUnique()
//                         .HasName("users");

//                     b.ToTable("users");
//                 });
// #pragma warning restore 612, 618
//         }
//     }
// }
